{"version":3,"file":"static/js/265.6b59dbe3.chunk.js","mappings":"6QAGaA,EAAOC,EAAAA,GAAAA,GAAH,uGAOJC,GAAUD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,uPAcPG,EAAUH,EAAAA,GAAAA,EAAH,2CAIPI,EAAYJ,EAAAA,GAAAA,IAAH,kF,kBCHtB,EAtBuB,WACrB,OACE,UAACI,EAAD,YACE,SAACD,EAAD,sCACA,UAACJ,EAAD,YACE,yBACE,UAACE,EAAD,CAASI,GAAG,OAAZ,WACE,SAAC,MAAD,CAAuBC,KAAK,SAD9B,aAKF,yBACE,UAACL,EAAD,CAASI,GAAG,UAAZ,WACE,SAAC,MAAD,CAAWC,KAAK,SADlB,sBCZGF,EAAYJ,EAAAA,GAAAA,IAAH,wHAMTO,EAAeP,EAAAA,GAAAA,IAAH,qGAOZD,EAAOC,EAAAA,GAAAA,GAAH,wDAIJC,GAAUD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,gICoCpB,EAhDqB,WAAO,IAAD,IACjBQ,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,GAMlB,IAHAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaT,GAASU,MAAK,SAAAC,GAAK,OAAIP,EAAUO,QAC7C,CAACX,KACCG,EAAOS,OACV,OAAO,KAETT,EAAOS,OAAOC,KAAI,SAAAC,GAAK,OAAIP,EAAUQ,KAAKD,EAAME,SAChD,IAAQC,EAAwDd,EAAxDc,YAAaC,EAA2Cf,EAA3Ce,eAAgBC,EAA2BhB,EAA3BgB,aAAcC,EAAajB,EAAbiB,SAE7CC,EAAY,oBAAGhB,EAASiB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAE7C,OACE,6BACE,UAAC,EAAD,CAAS1B,GAAIwB,EAAb,WACE,SAAC,MAAD,CAAavB,KAAK,SADpB,UAICK,IACC,UAAC,EAAD,YACE,gBAAKqB,IAAG,UArBE,mCAqBF,OAAiBP,GAAeQ,IAAKP,KAC7C,UAACnB,EAAD,YACE,0BACGmB,EADH,KACqBQ,OAAOC,SAASR,GADrC,QAGA,8CACA,sCACA,uBAAIC,KACJ,oCACA,SAAC,EAAD,UACGb,EAAUqB,OAAS,GAClBrB,EAAUM,KAAI,SAAAC,GAAK,OAAI,wBAAiBA,GAARA,eAK1C,SAAC,EAAD,KACA,SAAC,KAAD","sources":["components/MovieExtraInfo/MovieExtraInfo.styled.js","components/MovieExtraInfo/MovieExtraInfo.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 30px;\n  align-items: center;\n  padding: 10px 15px;\n`;\n\nexport const NavItem = styled(NavLink)`\n  font-size: 20px;\n  font-weight: 500;\n  color: inherit;\n  padding: 0 5px;\n  border-radius: 4px;\n  display:flex;\n  justify-content: center;\n  align-items: center;\n  gap: 3px;\n  &.active {\n    color: tomato;\n  }\n`;\nexport const Caption = styled.p`\nfont-weight: 500;\n`\n\nexport const Container = styled.div`\n  border-bottom: 3px solid #ccc;\n  margin-bottom: 15px;\n`;\n","import { List, NavItem, Caption, Container } from './MovieExtraInfo.styled';\nimport { MdOutlineRecentActors, MdPreview } from 'react-icons/md';\n\nconst MovieExtraInfo = () => {\n  return (\n    <Container>\n      <Caption>Additional information</Caption>\n      <List>\n        <li>\n          <NavItem to=\"cast\">\n            <MdOutlineRecentActors size=\"25px\" />\n            Cast\n          </NavItem>\n        </li>\n        <li>\n          <NavItem to=\"reviews\">\n            <MdPreview size=\"25px\" />\n            Reviews\n          </NavItem>\n        </li>\n      </List>\n    </Container>\n  );\n};\n\nexport default MovieExtraInfo;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  padding: 15px 0;\n  border-bottom: 3px solid #ccc;\n  margin-bottom: 15px;\n`;\nexport const MovieInfoBox = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 10px;\n`;\nexport const NavItem = styled(NavLink)`\n\ndisplay: inline-flex;\njustify-content: center;\nalign-items: center;\ngap:3px;\nfont-weight: 500;\n\n`\n","// import { useState } from 'react';\nimport { useEffect, useState } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { IoArrowBack } from 'react-icons/io5';\nimport { getMovieById } from 'service/FetchMovies';\nimport MovieExtraInfo from 'components/MovieExtraInfo/MovieExtraInfo';\nimport { Container, MovieInfoBox, List, NavItem } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [detail, setDetail] = useState([]);\n  const location = useLocation();\n  const genreList = [];\n  const IMAGE_URL = 'https://image.tmdb.org/t/p/w300';\n\n  useEffect(() => {\n    getMovieById(movieId).then(movie => setDetail(movie));\n  }, [movieId]);\n  if (!detail.genres) {\n    return null;\n  }\n  detail.genres.map(genre => genreList.push(genre.name));\n  const { poster_path, original_title, release_date, overview } = detail;\n\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  return (\n    <main>\n      <NavItem to={backLinkHref}>\n        <IoArrowBack size=\"20px\" />\n        Back\n      </NavItem>\n      {detail && (\n        <Container>\n          <img src={`${IMAGE_URL}${poster_path}`} alt={original_title} />\n          <MovieInfoBox>\n            <h1>\n              {original_title} ({Number.parseInt(release_date)})\n            </h1>\n            <p>User Score: 100% </p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <List>\n              {genreList.length > 0 &&\n                genreList.map(genre => <li key={genre}>{genre}</li>)}\n            </List>\n          </MovieInfoBox>\n        </Container>\n      )}\n      <MovieExtraInfo />\n      <Outlet />\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["List","styled","NavItem","NavLink","Caption","Container","to","size","MovieInfoBox","movieId","useParams","useState","detail","setDetail","location","useLocation","genreList","useEffect","getMovieById","then","movie","genres","map","genre","push","name","poster_path","original_title","release_date","overview","backLinkHref","state","from","src","alt","Number","parseInt","length"],"sourceRoot":""}