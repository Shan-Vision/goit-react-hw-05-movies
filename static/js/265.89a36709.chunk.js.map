{"version":3,"file":"static/js/265.89a36709.chunk.js","mappings":"iRAGaA,EAAOC,EAAAA,GAAAA,GAAH,uGAOJC,GAAUD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,ySAkBPG,EAAUH,EAAAA,GAAAA,EAAH,6DAKPI,EAAYJ,EAAAA,GAAAA,IAAH,kF,kBCRtB,EAtBuB,SAAC,GAAkB,IAAhBK,EAAe,EAAfA,SACxB,OACE,UAACD,EAAD,YACE,SAACD,EAAD,sCACA,UAACJ,EAAD,YACE,yBACE,UAACE,EAAD,CAASK,GAAG,OAAOC,MAAO,CAAEC,KAAMH,GAAlC,WACE,SAAC,MAAD,CAAuBI,KAAK,SAD9B,aAKF,yBACE,UAACR,EAAD,CAASK,GAAG,UAAUC,MAAO,CAAEC,KAAMH,GAArC,WACE,SAAC,MAAD,CAAWI,KAAK,SADlB,sBCZGL,EAAYJ,EAAAA,GAAAA,IAAH,uJASTU,EAAQV,EAAAA,GAAAA,IAAH,oFAKLW,EAAeX,EAAAA,GAAAA,IAAH,qGAOZY,EAAWZ,EAAAA,GAAAA,EAAH,6CAIRD,EAAOC,EAAAA,GAAAA,GAAH,wDAIJC,GAAUD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,wJC8BpB,EAhDqB,WAAO,IAAD,IACjBa,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMZ,GAAWa,EAAAA,EAAAA,MACXC,EAAY,GAMlB,IAHAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBR,GAASS,MAAK,SAAAC,GAAK,OAAIN,EAAUM,QAChD,CAACV,KACCG,EAAOQ,OACV,OAAO,KAETR,EAAOQ,OAAOC,KAAI,SAAAC,GAAK,OAAIP,EAAUQ,KAAKD,EAAME,SAChD,IAAQC,EAAwDb,EAAxDa,YAAaC,EAA2Cd,EAA3Cc,eAAgBC,EAA2Bf,EAA3Be,aAAcC,EAAahB,EAAbgB,SAE7CC,EAAY,oBAAG5B,EAASE,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAE7C,OACE,6BACE,UAAC,EAAD,CAASF,GAAI2B,EAAb,WACE,SAAC,MAAD,CAAaxB,KAAK,SADpB,UAICO,IACC,UAAC,EAAD,YACE,SAACN,EAAD,CAAOwB,IAAG,UArBA,mCAqBA,OAAiBL,GAAeM,IAAKL,KAC/C,UAACnB,EAAD,YACE,0BACGmB,EADH,KACqBM,OAAOC,SAASN,GADrC,QAGA,8CACA,sCACA,SAACnB,EAAD,UAAWoB,KACX,oCACA,SAAC,EAAD,UACGb,EAAUmB,OAAS,GAClBnB,EAAUM,KAAI,SAAAC,GAAK,OAAI,wBAAiBA,GAARA,eAK1C,SAAC,EAAD,CAAgBrB,SAAU4B,KAC1B,SAAC,KAAD","sources":["components/MovieExtraInfo/MovieExtraInfo.styled.js","components/MovieExtraInfo/MovieExtraInfo.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 30px;\n  align-items: center;\n  padding: 10px 15px;\n`;\n\nexport const NavItem = styled(NavLink)`\n  font-size: 20px;\n  font-weight: 500;\n  color: #fff;\n  padding: 0 5px;\n  border-radius: 4px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 3px;\n  &.active {\n    color: #b527b5;\n  }\n  :hover:not(.active) {\n    color: #3bd9d9;\n  }\n`;\n\nexport const Caption = styled.p`\n  font-weight: 500;\n  color: #fff;\n`;\n\nexport const Container = styled.div`\n  border-bottom: 3px solid #ccc;\n  margin-bottom: 35px;\n`;\n","import { List, NavItem, Caption, Container } from './MovieExtraInfo.styled';\nimport { MdOutlineRecentActors, MdPreview } from 'react-icons/md';\n\nconst MovieExtraInfo = ({ location }) => {\n  return (\n    <Container>\n      <Caption>Additional information</Caption>\n      <List>\n        <li>\n          <NavItem to=\"cast\" state={{ from: location }}>\n            <MdOutlineRecentActors size=\"25px\" />\n            Cast\n          </NavItem>\n        </li>\n        <li>\n          <NavItem to=\"reviews\" state={{ from: location }}>\n            <MdPreview size=\"25px\" />\n            Reviews\n          </NavItem>\n        </li>\n      </List>\n    </Container>\n  );\n};\n\nexport default MovieExtraInfo;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 40px;\n  padding: 15px 0;\n  border-bottom: 3px solid #ccc;\n  margin-bottom: 15px;\n  color: white;\n`;\n\nexport const Image = styled.img`\n  max-height: 500px;\n  object-fit: contain;\n  margin: 0;\n`;\nexport const MovieInfoBox = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const Overview = styled.p`\n  max-width: 720px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 10px;\n`;\nexport const NavItem = styled(NavLink)`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  gap: 3px;\n  font-weight: 500;\n  color: white;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { IoArrowBack } from 'react-icons/io5';\nimport { getMovieDetails } from 'service/FetchMovies';\nimport MovieExtraInfo from 'components/MovieExtraInfo/MovieExtraInfo';\nimport {\n  Container,\n  MovieInfoBox,\n  List,\n  NavItem,\n  Image,\n  Overview,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [detail, setDetail] = useState([]);\n  const location = useLocation();\n  const genreList = [];\n  const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(movie => setDetail(movie));\n  }, [movieId]);\n  if (!detail.genres) {\n    return null;\n  }\n  detail.genres.map(genre => genreList.push(genre.name));\n  const { poster_path, original_title, release_date, overview } = detail;\n\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  return (\n    <main>\n      <NavItem to={backLinkHref}>\n        <IoArrowBack size=\"20px\" />\n        Back\n      </NavItem>\n      {detail && (\n        <Container>\n          <Image src={`${IMAGE_URL}${poster_path}`} alt={original_title} />\n          <MovieInfoBox>\n            <h1>\n              {original_title} ({Number.parseInt(release_date)})\n            </h1>\n            <p>User Score: 100% </p>\n            <h2>Overview</h2>\n            <Overview>{overview}</Overview>\n            <h3>Genres</h3>\n            <List>\n              {genreList.length > 0 &&\n                genreList.map(genre => <li key={genre}>{genre}</li>)}\n            </List>\n          </MovieInfoBox>\n        </Container>\n      )}\n      <MovieExtraInfo location={backLinkHref} />\n      <Outlet />\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["List","styled","NavItem","NavLink","Caption","Container","location","to","state","from","size","Image","MovieInfoBox","Overview","movieId","useParams","useState","detail","setDetail","useLocation","genreList","useEffect","getMovieDetails","then","movie","genres","map","genre","push","name","poster_path","original_title","release_date","overview","backLinkHref","src","alt","Number","parseInt","length"],"sourceRoot":""}