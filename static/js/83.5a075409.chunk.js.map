{"version":3,"file":"static/js/83.5a075409.chunk.js","mappings":"+PAEaA,EAAaC,EAAAA,GAAAA,GAAS,6KAUtBC,EAAaD,EAAAA,GAAAA,OAAa,kpBAOvB,YAAS,SAANE,OACT,onCAqCsD,I,SCzBhE,EA5BqB,SAAH,GAA+B,IAAzBC,EAAO,EAAPA,QAASC,EAAQ,EAARA,SAC/B,GAA4BC,EAAAA,EAAAA,UAAS,MAAK,eAAnCC,EAAM,KAAEC,EAAS,KAClBC,EAAYJ,EAASK,KAAI,YAAO,SAAJC,IAAe,IAMjD,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAeC,KAAKN,EACtB,GAAG,KAGD,SAACR,EAAU,UACF,OAANO,QAAM,IAANA,OAAM,EAANA,EAAQG,KAAI,SAAAK,GACX,IAAMC,EAAeP,EAAUQ,SAASF,EAAMJ,MAC9C,OACE,yBACE,SAACT,EAAU,CACTgB,KAAK,SACLf,OAAQa,EACRZ,QAAS,kBAAMA,EAAQW,EAAM,EAAC,SAE7BA,EAAMJ,QANFI,EAAMI,GAUnB,KAGN,E,iBC3BaC,EAAUnB,EAAAA,GAAAA,QAAc,sBAExBoB,EAAQpB,EAAAA,GAAAA,GAAS,kGAMjBqB,EAAgBrB,EAAAA,GAAAA,GAAS,4HAOzBsB,EAAYtB,EAAAA,GAAAA,GAAS,oEAKrBuB,EAAQvB,EAAAA,GAAAA,IAAU,uEAIlBwB,EAAUxB,EAAAA,GAAAA,IAAU,yHAQpByB,EAAYzB,EAAAA,GAAAA,GAAS,sDAIrB0B,GAAW1B,EAAAA,EAAAA,IAAO2B,EAAAA,GAAP3B,CAAe,mSAI5BuB,EAAiBA,EAIjBE,EAAqBA,GCuBhC,EAvDa,WACX,OAA4BpB,EAAAA,EAAAA,UAAS,MAAK,eAAnCuB,EAAM,KAAEC,EAAS,KACxB,GAAsCxB,EAAAA,EAAAA,UAAS,IAAG,eAA3CyB,EAAW,KAAEC,EAAc,KAC5BC,GAAWC,EAAAA,EAAAA,OAGjBtB,EAAAA,EAAAA,YAAU,YACRuB,EAAAA,EAAAA,MACGrB,KAAKgB,GACLM,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAM,GACtC,GAAG,KAEHzB,EAAAA,EAAAA,YAAU,WACR,IAAM4B,EAAWT,EAAYrB,KAAI,YAAK,SAAFS,GAAYsB,UAAU,KAC1DC,EAAAA,EAAAA,IAAiBF,GAAU1B,KAAKgB,EAClC,GAAG,CAACC,IAeJ,OADFO,QAAQC,IAAI,mBAAoBR,IAE5B,2BACE,UAACX,EAAO,YACN,SAACC,EAAK,8BACN,SAAC,EAAY,CAACjB,QAjBM,SAAAW,GACxB,IAAQJ,EAASI,EAATJ,KAER,GAD0BoB,EAAYrB,KAAI,YAAO,SAAJC,IAAe,IACtCM,SAASN,GAA/B,CACE,IAAMgC,EAAsBZ,EAAYa,QACtC,SAAA7B,GAAK,OAAIA,EAAMJ,OAASA,CAAI,IAE9BqB,EAAeW,EAEjB,MACAX,GAAe,SAAAa,GAAW,wBAAQd,GAAW,CAAEhB,GAAQ,GACzD,EAMgDV,SAAU0B,KAEpD,SAACT,EAAa,UACXO,GACCA,EAAOnB,KAAI,gBAAGS,EAAE,EAAFA,GAAI2B,EAAK,EAALA,MAAOnC,EAAI,EAAJA,KAAMoC,EAAW,EAAXA,YAAW,OACxC,SAACxB,EAAS,WACR,UAACI,EAAQ,CAACqB,GAAE,kBAAa7B,GAAM8B,MAAO,CAAEC,KAAMjB,GAAW,WACvD,SAACT,EAAK,CAAC2B,IAAG,UArCR,mCAqCsB,OAAGJ,GAAeK,IAAI,gBAC9C,SAAC3B,EAAO,WACN,SAACC,EAAS,UAAEoB,GAASnC,UAJXQ,EAOJ,OAGlB,SAAC,KAAM,QAIf,C","sources":["components/GenresFilter/GenresFiltered.styled.js","components/GenresFilter/GenresFilter.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const GenresList = styled.ul`\n  max-width: 1200px;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  margin: 0 auto 40px;\n`;\n\nexport const GenresItem = styled.button`\n  padding: 3px 10px;\n  font-size: 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  color: white;\n  border: none;\n  background: ${({ active }) =>\n    active\n      ? `linear-gradient(\n      45deg,\n      rgb(239, 7, 129) 0%,\n      rgb(239, 7, 129) 6%,\n      rgb(208, 10, 112) 6%,\n      rgb(208, 10, 112) 25%,\n      rgb(177, 13, 96) 25%,\n      rgb(177, 13, 96) 40%,\n      rgb(147, 16, 79) 40%,\n      rgb(147, 16, 79) 45%,\n      rgb(116, 19, 62) 45%,\n      rgb(116, 19, 62) 53%,\n      rgb(85, 22, 46) 53%,\n      rgb(85, 22, 46) 66%,\n      rgb(54, 25, 29) 66%,\n      rgb(54, 25, 29) 100%\n    )`\n      : ` linear-gradient(\n      45deg,\n      rgba(8, 211, 172, 0.45) 0%,\n      rgba(8, 211, 172, 0.45) 12.5%,\n      rgba(62, 29, 50, 0.45) 12.5%,\n      rgba(62, 29, 50, 0.45) 25%,\n      rgba(54, 55, 67, 0.45) 25%,\n      rgba(54, 55, 67, 0.45) 37.5%,\n      rgba(47, 81, 85, 0.45) 37.5%,\n      rgba(47, 81, 85, 0.45) 50%,\n      rgba(23, 159, 137, 0.45) 50%,\n      rgba(23, 159, 137, 0.45) 62.5%,\n      rgba(16, 185, 155, 0.45) 62.5%,\n      rgba(16, 185, 155, 0.45) 75%,\n      rgba(31, 133, 120, 0.45) 75%,\n      rgba(31, 133, 120, 0.45) 87.5%,\n      rgba(39, 107, 102, 0.45) 87.5%,\n      rgba(39, 107, 102, 0.45) 100%\n    ),\n    linear-gradient(135deg, rgb(87, 116, 221), rgb(35, 4, 229))`};\n\n  :hover,\n  :focus-visible {\n    background: linear-gradient(\n      45deg,\n      rgb(239, 7, 129) 0%,\n      rgb(239, 7, 129) 6%,\n      rgb(208, 10, 112) 6%,\n      rgb(208, 10, 112) 25%,\n      rgb(177, 13, 96) 25%,\n      rgb(177, 13, 96) 40%,\n      rgb(147, 16, 79) 40%,\n      rgb(147, 16, 79) 45%,\n      rgb(116, 19, 62) 45%,\n      rgb(116, 19, 62) 53%,\n      rgb(85, 22, 46) 53%,\n      rgb(85, 22, 46) 66%,\n      rgb(54, 25, 29) 66%,\n      rgb(54, 25, 29) 100%\n    );\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { getAllGenres } from 'service/FetchMovies';\nimport { GenresList, GenresItem } from './GenresFiltered.styled';\n\nconst GenresFilter = ({ onClick, selected }) => {\n  const [genres, setGenres] = useState(null);\n  const genreName = selected.map(({ name }) => name);\n\n  useEffect(() => {\n    getAllGenres().then(setGenres);\n  }, []);\n\n  return (\n    <GenresList>\n      {genres?.map(genre => {\n        const currentGenre = genreName.includes(genre.name);\n        return (\n          <li key={genre.id}>\n            <GenresItem\n              type=\"button\"\n              active={currentGenre}\n              onClick={() => onClick(genre)}\n            >\n              {genre.name}\n            </GenresItem>\n          </li>\n        );\n      })}\n    </GenresList>\n  );\n};\n\nexport default GenresFilter;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Section = styled.section``;\n\nexport const Title = styled.h1`\n  margin-bottom: 30px;\n  font-size: 40px;\n  color: rgb(153, 156, 159);\n`;\n\nexport const MovieCardList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 24px;\n  padding: 0 10px;\n`;\nexport const MovieCard = styled.li`\n  max-width: 250px;\n  border-radius: 4px;\n`;\n\nexport const Image = styled.img`\n  border-radius: 4px;\n  margin-bottom: 10px;\n`;\nexport const CardBox = styled.div`\n  height: 36px;\n  display: flex;\n  align-items: baseline;\n  gap: 15px;\n  padding-left: 8px;\n`;\n\nexport const CardTitle = styled.h5`\n  color: rgb(153, 156, 159);\n`;\n\nexport const LinkElem = styled(NavLink)`\n  width: 100%;\n  height: 100%;\n  border-radius: 4px;\n  :hover ${Image}, :focus ${Image} {\n    box-shadow: 0 4px 4px #3bd9d9, 0 1px 6px #3bd9d9, 0 8px 8px #b527b5,\n      0 16px 16px #b527b5, 8px 32px 32px #b527b5;\n  }\n  :hover ${CardTitle}, :focus ${CardTitle} {\n    color: #3bd9d9;\n  }\n`;\n","import GenresFilter from 'components/GenresFilter';\nimport { useEffect, useState } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { getPopularMovies, getGenreListById } from 'service/FetchMovies';\nimport {\n  Title,\n  MovieCardList,\n  MovieCard,\n  CardBox,\n  CardTitle,\n  LinkElem,\n  Image,\n  Section,\n} from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState(null);\n  const [activeGenre, setActiveGenre] = useState([]);\n  const location = useLocation();\n  const IMAGE_URL = 'https://image.tmdb.org/t/p/w300';\n\n  useEffect(() => {\n    getPopularMovies()\n      .then(setMovies)\n      .catch(error => console.log(error));\n  }, []);\n\n  useEffect(() => {\n    const genresId = activeGenre.map(({ id }) => id.toString());\n    getGenreListById(genresId).then(setMovies);\n  }, [activeGenre]);\n\n  const handleSelectGenre = genre => {\n    const { name } = genre;\n    const GenreSelectedName = activeGenre.map(({ name }) => name);\n    if (GenreSelectedName.includes(name)) {\n      const ToggleSelectedGenre = activeGenre.filter(\n        genre => genre.name !== name\n      );\n      setActiveGenre(ToggleSelectedGenre);\n      return;\n    }\n    setActiveGenre(activeGerne => [...activeGenre, genre]);\n  };\nconsole.log('activeGenre :>> ', activeGenre);\n  return (\n    <main>\n      <Section>\n        <Title>Trending today</Title>\n        <GenresFilter onClick={handleSelectGenre} selected={activeGenre} />\n\n        <MovieCardList>\n          {movies &&\n            movies.map(({ id, title, name, poster_path }) => (\n              <MovieCard key={id}>\n                <LinkElem to={`/movies/${id}`} state={{ from: location }}>\n                  <Image src={`${IMAGE_URL}${poster_path}`} alt=\"Movie Card\" />\n                  <CardBox>\n                    <CardTitle>{title || name}</CardTitle>\n                  </CardBox>\n                </LinkElem>\n              </MovieCard>\n            ))}\n        </MovieCardList>\n        <Outlet />\n      </Section>\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["GenresList","styled","GenresItem","active","onClick","selected","useState","genres","setGenres","genreName","map","name","useEffect","getAllGenres","then","genre","currentGenre","includes","type","id","Section","Title","MovieCardList","MovieCard","Image","CardBox","CardTitle","LinkElem","NavLink","movies","setMovies","activeGenre","setActiveGenre","location","useLocation","getPopularMovies","catch","error","console","log","genresId","toString","getGenreListById","ToggleSelectedGenre","filter","activeGerne","title","poster_path","to","state","from","src","alt"],"sourceRoot":""}